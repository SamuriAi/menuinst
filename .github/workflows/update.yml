name: Update Repository

on:
  # every Sunday at 00:36 UTC
  # https://crontab.guru/#36_2_*_*_0
  schedule:
    - cron: 36 2 * * 0
ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION=true  workflow_dispatch:

  issue_comment:
    types:
      - created

jobs:
  update:
    if: >-
      !github.event.repository.fork
      && (
        github.event_name == 'schedule'
        || github.event_name == 'workflow_dispatch'
        || (
          github.event_name == 'issue_comment'
          && github.event.issue.pull_request
          && (
            github.event.comment.body == '@conda-bot render'
            || github.event.comment.body == '@conda-bot recreate'
          )
        )
      )
    runs-on: ubuntu-latest
    steps:
      - if: github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}

      - if: github.event.comment.body == '@conda-bot render'
        name: Configure git origin
        run: |
          echo REPOSITORY=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.repo.full_name') >> $GITHUB_ENV
          echo REF=$(curl --silent ${{ github.event.issue.pull_request.url }} | jq --raw-output '.head.ref') >> $GITHUB_ENV

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          repository: ${{ env.REPOSITORY || github.repository }}
          ref: ${{ env.REF || '' }}
          token: ${{ secrets.SYNC_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.name 'Conda Bot'
          git config --global user.email '18747875+conda-bot@users.noreply.github.com'

      - uses: conda/actions/combine-durations@15f883f14f4232f83658e3609c3316d58905138f # v24.8.0
        id: durations
        continue-on-error: true

      - uses: conda/actions/template-files@15f883f14f4232f83658e3609c3316d58905138f # v24.8.0
        id: templates
        continue-on-error: true

      - name: Commit changes
        # no-op if there are no updates
        continue-on-error: true
        run: |
          git add .
          git commit --message "ðŸ¤– updated file(s)"

      - if: github.event.comment.body != '@conda-bot render'
        name: Create fork
        # no-op if the repository is already forked
        run: echo FORK=$(gh repo fork --clone=false --default-branch-only 2>&1 | awk '{print $1}') >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.SYNC_TOKEN }}

      - if: github.event.comment.body != '@conda-bot render'
        id: create
        # no-op if no commits were made
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5
        with:
          push-to-fork: ${{ env.FORK }}
          token: ${{ secrets.SYNC_TOKEN }}
          branch: update
          delete-branch: true
          title: ðŸ¤– Update infrastructure file(s)
          body: |
            [update.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/update.yml

            Your friendly repository updater.

            ${{ steps.durations.outputs.summary }}

            ${{ steps.templates.outputs.summary }}

            This PR was triggered by @${{ github.triggering_actor }} via ${{ github.event_name }}.

            <details>
            <summary>Commands</summary>

            Trigger actions by commenting on this PR:

            - `@conda-bot render` will run rendering workflows and commit and push any changes to this PR
            - `@conda-bot recreate` will recreate this PR, overwriting any edits that have been made to it

            </details>

            ###### Auto-generated by the [`update.yml`][update.yml] workflow, see ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.

      - if: github.event.comment.body == '@conda-bot render'
        id: update
        name: Push changes
        run: git push --force-with-lease

      - if: always() && github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: ${{ (steps.create.conclusion == 'success' || steps.update.conclusion == 'success') && 'hooray' || 'confused' }}
          reactions-edit-mode: replace
          token: ${{ secrets.SYNC_TOKEN }}
            - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.4
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
